{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-21T14:46:02.703Z",
    "end": "2023-02-21T14:46:02.761Z",
    "duration": 58,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1695806c-dbe6-49a0-b780-ac9b542e6425",
      "title": "",
      "fullFile": "C:\\Users\\LENOVO\\Documents\\fazztrack\\tugas week 4\\api-automation\\tests\\test_api_swagger.js",
      "file": "\\tests\\test_api_swagger.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89c4d74d-4574-4c20-a4c7-b6de78ec07a4",
          "title": "@getuser - Testcases endpoint for get Users",
          "fullFile": "C:\\Users\\LENOVO\\Documents\\fazztrack\\tugas week 4\\api-automation\\tests\\test_api_swagger.js",
          "file": "\\tests\\test_api_swagger.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "@testid01 - Test apakah endpoint get user id berfungsi mendapat data user id yang valid",
              "fullTitle": "@getuser - Testcases endpoint for get Users @testid01 - Test apakah endpoint get user id berfungsi mendapat data user id yang valid",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = dataTest.dataGetUser();\n       \nconst response = await apiUnderTest.getUser(data.id);\nexpect(response.statusCode).to.equal(200)\nexpect(response.body.id).to.equal(data.id);",
              "err": {},
              "uuid": "8296adbc-a67d-434d-9bcc-0b54752ead33",
              "parentUUID": "89c4d74d-4574-4c20-a4c7-b6de78ec07a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@testid01 - Test apakah endpoint get user id  gagal mendapatkan data ketika data id yang diinputkan invalid",
              "fullTitle": "@getuser - Testcases endpoint for get Users @testid01 - Test apakah endpoint get user id  gagal mendapatkan data ketika data id yang diinputkan invalid",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = dataNegativeTest.dataGetUser();\n       \nconst response = await apiUnderTest.getUser(data.id);\nexpect(response.statusCode).to.equal(404)\nexpect(response.body.message).to.equal(\"user not found\");",
              "err": {},
              "uuid": "9c9e6ac4-ac2c-4e7f-a10d-b12d40204b6d",
              "parentUUID": "89c4d74d-4574-4c20-a4c7-b6de78ec07a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8296adbc-a67d-434d-9bcc-0b54752ead33",
            "9c9e6ac4-ac2c-4e7f-a10d-b12d40204b6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}