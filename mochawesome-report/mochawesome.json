{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-23T15:02:03.597Z",
    "end": "2023-02-23T15:02:03.762Z",
    "duration": 165,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "db8a88ce-4bec-4645-8243-71dcd4acb34e",
      "title": "",
      "fullFile": "C:\\Users\\LENOVO\\Documents\\fazztrack\\tugas week 4\\api-automation\\tests\\test_api_swagger.js",
      "file": "\\tests\\test_api_swagger.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b7898ac8-efbd-4a4a-a6da-8f0166b7c50e",
          "title": "@getuser - Testcases endpoint for get Users",
          "fullFile": "C:\\Users\\LENOVO\\Documents\\fazztrack\\tugas week 4\\api-automation\\tests\\test_api_swagger.js",
          "file": "\\tests\\test_api_swagger.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"@getuser - Testcases endpoint for get Users\"",
              "fullTitle": "@getuser - Testcases endpoint for get Users \"before all\" hook in \"@getuser - Testcases endpoint for get Users\"",
              "timedOut": false,
              "duration": 40,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await apiUnderTest.createUser(dataPayload.dataPostUser())\ndataTampungan = response.body",
              "err": {},
              "uuid": "8593034f-79a7-482f-a536-3d74af901a0a",
              "parentUUID": "b7898ac8-efbd-4a4a-a6da-8f0166b7c50e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"@getuser - Testcases endpoint for get Users\"",
              "fullTitle": "@getuser - Testcases endpoint for get Users \"after all\" hook in \"@getuser - Testcases endpoint for get Users\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await apiUnderTest.deleteUserAll();",
              "err": {},
              "uuid": "b8c31633-69fa-468e-adb3-fad949e8b7c7",
              "parentUUID": "b7898ac8-efbd-4a4a-a6da-8f0166b7c50e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "@testid01 - Test apakah endpoint get user id berfungsi mendapat data user id yang valid",
              "fullTitle": "@getuser - Testcases endpoint for get Users @testid01 - Test apakah endpoint get user id berfungsi mendapat data user id yang valid",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await apiUnderTest.getUser(dataTampungan.id);\n expect(response.statusCode).to.equal(200)\n expect(response.body.id).to.equal(dataTampungan.id);\n for(let index = 0; index < response.body.length; index++) {\n     expect(response.body).to.have.jsonSchema(schemaResponse.getUserSwaggerSchemaResponse);\n }",
              "err": {},
              "uuid": "5f153700-ff71-4023-a774-065ab582ed4a",
              "parentUUID": "b7898ac8-efbd-4a4a-a6da-8f0166b7c50e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@testid01 - Test apakah endpoint get user id  gagal mendapatkan data ketika data id yang diinputkan invalid",
              "fullTitle": "@getuser - Testcases endpoint for get Users @testid01 - Test apakah endpoint get user id  gagal mendapatkan data ketika data id yang diinputkan invalid",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = dataNegativeTest.dataGetUser();\n       \nconst response = await apiUnderTest.getUser(data.id);\nexpect(response.statusCode).to.equal(404)\nexpect(response.body.message).to.equal(\"user not found\");\nexpect(response.body.errorCode).to.equal(\"ER-01\");",
              "err": {},
              "uuid": "9caa43fc-9f3d-4faa-853f-636a53173ce5",
              "parentUUID": "b7898ac8-efbd-4a4a-a6da-8f0166b7c50e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "@testid02 - Test apakah endpoint get user id gagal mendapatkan data ketika data id kosong",
              "fullTitle": "@getuser - Testcases endpoint for get Users @testid02 - Test apakah endpoint get user id gagal mendapatkan data ketika data id kosong",
              "timedOut": false,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await apiUnderTest.getUser(\"\");\n console.log(response)\n expect(response.statusCode).to.equal(400)\n // expect(response.body.message).to.equal(\"user not found\");\n // expect(response.body.errorCode).to.equal(\"ER-01\");",
              "err": {},
              "uuid": "81ff0d62-48a9-4716-9731-48a6b6c2c1ec",
              "parentUUID": "b7898ac8-efbd-4a4a-a6da-8f0166b7c50e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f153700-ff71-4023-a774-065ab582ed4a",
            "9caa43fc-9f3d-4faa-853f-636a53173ce5",
            "81ff0d62-48a9-4716-9731-48a6b6c2c1ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 102,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}